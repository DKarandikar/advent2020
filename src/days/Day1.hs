module Day1 where


-- 2017 for workflow testing purposes
-- input = "3294199471327195994824832197564859876682638188889768298894243832665654681412886862234525991553276578641265589959178414218389329361496673991614673626344552179413995562266818138372393213966143124914469397692587251112663217862879233226763533911128893354536353213847122251463857894159819828724827969576432191847787772732881266875469721189331882228146576832921314638221317393256471998598117289632684663355273845983933845721713497811766995367795857965222183668765517454263354111134841334631345111596131682726196574763165187889337599583345634413436165539744188866156771585647718555182529936669683581662398618765391487164715724849894563314426959348119286955144439452731762666568741612153254469131724137699832984728937865956711925592628456617133695259554548719328229938621332325125972547181236812263887375866231118312954369432937359357266467383318326239572877314765121844831126178173988799765218913178825966268816476559792947359956859989228917136267178571776316345292573489873792149646548747995389669692188457724414468727192819919448275922166321158141365237545222633688372891451842434458527698774342111482498999383831492577615154591278719656798277377363284379468757998373193231795767644654155432692988651312845433511879457921638934877557575241394363721667237778962455961493559848522582413748218971212486373232795878362964873855994697149692824917183375545192119453587398199912564474614219929345185468661129966379693813498542474732198176496694746111576925715493967296487258237854152382365579876894391815759815373319159213475555251488754279888245492373595471189191353244684697662848376529881512529221627313527441221459672786923145165989611223372241149929436247374818467481641931872972582295425936998535194423916544367799522276914445231582272368388831834437562752119325286474352863554693373718848649568451797751926315617575295381964426843625282819524747119726872193569785611959896776143539915299968276374712996485367853494734376257511273443736433464496287219615697341973131715166768916149828396454638596713572963686159214116763"
-- day1part1 :: IO ()
-- day1part1 = print $ sum $ map (\(x, y) -> read [x] :: Int) (filter (uncurry (==)) (zip input (drop 1 input ++ [head input])))

input = [1130, 1897, 1850, 1218, 1198, 1761, 1082, 1742, 1821, 1464, 1834, 1413, 1917, 1746, 1954, 1942, 1560, 1227, 1852, 1976, 1773, 1404, 1824, 1011, 1532, 1306, 1819, 1739, 1540, 1973, 1436, 1196, 1176, 1856, 1332, 1617, 1895, 1749, 1718, 1536, 1811, 113, 1008, 1908, 1799, 1914, 1603, 1782, 1980, 1228, 1838, 2006, 1953, 1846, 1903, 1470, 1774, 1599, 1446, 1324, 1054, 1952, 1928, 1997, 1764, 1943, 1932, 1615, 1428, 1036, 721, 1097, 1998, 1033, 1892, 1904, 1803, 1825, 1370, 1836, 1853, 1963, 1469, 1385, 246, 1987, 1153, 178, 1790, 1927, 1139, 1865, 1804, 1974, 1235, 1681, 1185, 2009, 1894, 1141, 1203, 1808, 1867, 1274, 1891, 1779, 1342, 1920, 851, 1994, 1975, 1979, 1880, 1647, 1365, 448, 1119, 1256, 1212, 1268, 1878, 1805, 1889, 1870, 1906, 1959, 1898, 1305, 1559, 1088, 1845, 1783, 1841, 1864, 1961, 1267, 1437, 1823, 801, 1579, 1538, 1745, 1972, 1259, 1899, 1517, 1940, 1543, 1882, 1933, 1240, 1608, 1263, 1429, 1197, 1508, 1631, 1988, 1350, 1638, 1800, 1999, 1822, 1776, 1896, 1610, 1831, 1921, 1535, 1526, 1491, 1876, 1476, 1945, 1702, 1900, 1814, 1289, 1992, 1859, 1967, 1966, 1283, 2002, 1195, 1066, 1924, 1968, 1835, 1971, 1977, 1430, 1844, 1465, 1595, 1957, 1472, 219, 1851, 1955]

day1part1 :: IO ()
day1part1 = print . head $ map (uncurry (*)) (filter (\(x,y) -> x+y==2020) [(x,y) | x <- input, y <- input])

day1part2 :: IO ()
day1part2 = print $ head $ map (\(x,y,z) -> x*y*z) (filter (\(x,y,z) -> x+y+z==2020) [(x,y,z) | x <- input, y <- input, z <- input])
